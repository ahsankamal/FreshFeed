[{"/Users/ahsankamal/dev/JobInterviews/Freshworks/freshfeed/freshfeed-app/src/index.js":"1","/Users/ahsankamal/dev/JobInterviews/Freshworks/freshfeed/freshfeed-app/src/containers/FeedFormTable.js":"2","/Users/ahsankamal/dev/JobInterviews/Freshworks/freshfeed/freshfeed-app/src/App.js":"3","/Users/ahsankamal/dev/JobInterviews/Freshworks/freshfeed/freshfeed-app/src/containers/DuckFeedForm.js":"4","/Users/ahsankamal/dev/JobInterviews/Freshworks/freshfeed/freshfeed-app/src/reportWebVitals.js":"5"},{"size":706,"mtime":1607002882209,"results":"6","hashOfConfig":"7"},{"size":2244,"mtime":1607092731415,"results":"8","hashOfConfig":"7"},{"size":1103,"mtime":1607092953291,"results":"9","hashOfConfig":"7"},{"size":4850,"mtime":1607092887674,"results":"10","hashOfConfig":"7"},{"size":362,"mtime":1606603689409,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1k5fibs",{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ahsankamal/dev/JobInterviews/Freshworks/freshfeed/freshfeed-app/src/index.js",["24","25","26"],"/Users/ahsankamal/dev/JobInterviews/Freshworks/freshfeed/freshfeed-app/src/containers/FeedFormTable.js",["27","28","29","30"],"/Users/ahsankamal/dev/JobInterviews/Freshworks/freshfeed/freshfeed-app/src/App.js",["31","32","33"],"import logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { useForm } from \"react-hook-form\";\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport DuckFeedForm from './containers/DuckFeedForm';\nimport FeedFormTable from './containers/FeedFormTable'\nimport {Navbar, Nav} from 'react-bootstrap';\n\nfunction App() {\n\n  return (\n    <main>\n      <div>\n        <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"/\">Fresh Feed</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/duckfeedform\">Duck feed form</Nav.Link>\n            <Nav.Link className=\"justify-content-end\" href=\"/viewsubmission\">View Submissions</Nav.Link>\n          </Nav>\n        </Navbar>\n      </div>\n      <Switch>\n        <Route path=\"/\" component={DuckFeedForm} exact />\n        <Route path=\"/duckfeedform\" component={DuckFeedForm} />\n        <Route path=\"/viewsubmission\" component={FeedFormTable} />\n        <Route component={Error} />\n      </Switch>\n    </main>\n)\n}\n\nexport default App;\n","/Users/ahsankamal/dev/JobInterviews/Freshworks/freshfeed/freshfeed-app/src/containers/DuckFeedForm.js",["34","35","36","37","38","39","40"],"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport {Button, Form, Navbar, Nav} from 'react-bootstrap';\nimport React, { useEffect, useState, useRef, Component } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\n\nfunction DuckFeedForm() {\n\n  const { register, handleSubmit, watch, errors } = useForm();\n\n  const [startDate, setStartDate] = useState(new Date());\n\n  const DateTimePicker = () => {\n    return (\n      <DatePicker selected={startDate} onChange={date => setStartDate(date) } showTimeSelect dateFormat=\"Pp\"/>\n    );\n  };\n\n  const onSubmit = (data) => {\n    console.log(data);\n    console.log(startDate);\n    console.log(process.env.REACT_APP_BACKEND_API_HOST+'api/submit/');\n\n    const formData = {\n        feederName: data.feederName,\n        email: data.email,\n        duckCount: data.duckCount,\n        foodName: data.foodName,\n        foodAmount: data.amount,\n        parkLocation: data.parkLocation,\n        dateTime: startDate\n    }\n\n    axios.post(process.env.REACT_APP_BACKEND_API_HOST+'api/submit', {formData} )\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      })\n  }\n\n\n  return (\n\n    <div >\n    \n    <br></br>\n    <br></br>\n    <br></br>\n    \n    <form className=\"App\" onSubmit={handleSubmit(onSubmit)}>\n    <h1> Duck Feed Form</h1>\n\n    <div className=\"form-group row d-flex justify-content-center\">\n      <label className=\"col-sm-2 col-form-label\">Feeder Name</label>\n      <div className=\"col-sm-3\">\n        <input name=\"feederName\" type=\"text\" className=\"form-control\"  ref={register({required: 'required field', minLength: {value:3, message:'Name is too short'}, maxLength: {value:200, message:'Name is too long'}})} />\n        {errors.feederName && <span>{errors.feederName.message}</span>} \n      </div>\n    </div>\n\n    <div className=\"form-group row d-flex justify-content-center\">\n      <label className=\"col-sm-2 col-form-label \">Feeder Email</label>\n      <div className=\"col-sm-3\">\n        <input name=\"email\" type=\"email\" className=\"form-control\" placeHolder=\"Optional\" ref={register} />\n      </div>\n    </div>\n\n    <div className=\"form-group row d-flex justify-content-center\">\n      <label className=\"col-sm-2 col-form-label\">Enter the number of ducks fed by you.</label>\n      <div className=\"col-sm-3\">\n        <input name=\"duckCount\" type=\"number\" className=\"form-control\" ref={register({required: 'required field', min:{value:0, message:'Number of ducks fed cannot be negative'}})} />\n        {errors.duckCount && <span>{errors.duckCount.message}</span>} \n      </div>\n    </div>\n\n    <div className=\"form-group row d-flex justify-content-center\">\n      <label className=\"col-sm-2 col-form-label\">What food the ducks were fed?</label>\n      <div className=\"col-sm-3\">\n        <input name=\"foodName\" type=\"text\" className=\"form-control\" ref={register({required: 'required field', minLength: {value:3, message:'Food Name is too short'}, maxLength: {value:200, message:'Food Name is too long'}})} />\n        {errors.foodName && <span>{errors.foodName.message}</span>} \n      </div>\n        {/* <FoodAutoComplete /> */}\n    </div>\n\n    <div className=\"form-group row d-flex justify-content-center\">\n      <label className=\"col-sm-2 col-form-label\">How much amount of food were they fed? (lb)</label>\n      <div className=\"col-sm-3\">\n        <input name=\"amount\" type=\"number\" step=\"0.1\" className=\"form-control\" placeHolder=\"Pounds (lb)\" ref={register({required: 'required field', min:{value:0, message:'Amount of food cannot be negative'}})} />\n        {errors.amount && <span>{errors.amount.message}</span>}\n      </div>\n    </div>\n\n    {/* use long lat coordinates as input in future */}\n    <div className=\"form-group row d-flex justify-content-center\">\n      <label className=\"col-sm-2 col-form-label\">Enter the park location/address where you fed the ducks.</label>\n      <div className=\"col-sm-3\">\n        <input name=\"parkLocation\" type=\"text\" className=\"form-control\" ref={register({required: 'required field', minLength: {value:15, message:'Please enter full address of park location'}, maxLength: {value:250, message:'Park location address is too long'}})} />\n        {errors.parkLocation && <span>{errors.parkLocation.message}</span>}\n      </div>\n    </div>\n\n    <div className=\"form-group row d-flex justify-content-center\">\n      <label className=\"col-sm-2 col-form-label\">At what time did you feed the ducks?</label>\n      <div className=\"col-sm-3\">\n        {/* <input name=\"time\" className=\"form-control\" ref={register} /> */}\n        <DateTimePicker name=\"dateTime\"/>\n      </div>\n    </div>\n\n\n    <Button variant=\"primary\" type=\"submit\">\n      Submit\n    </Button>\n  </form>\n  </div>\n\n    \n  );\n}\n\nexport default DuckFeedForm;\n","/Users/ahsankamal/dev/JobInterviews/Freshworks/freshfeed/freshfeed-app/src/reportWebVitals.js",[],{"ruleId":"41","severity":1,"message":"42","line":5,"column":17,"nodeType":"43","messageId":"44","endLine":5,"endColumn":26},{"ruleId":"41","severity":1,"message":"45","line":6,"column":25,"nodeType":"43","messageId":"44","endLine":6,"endColumn":30},{"ruleId":"41","severity":1,"message":"46","line":6,"column":32,"nodeType":"43","messageId":"44","endLine":6,"endColumn":38},{"ruleId":"41","severity":1,"message":"47","line":3,"column":39,"nodeType":"43","messageId":"44","endLine":3,"endColumn":45},{"ruleId":"41","severity":1,"message":"42","line":3,"column":47,"nodeType":"43","messageId":"44","endLine":3,"endColumn":56},{"ruleId":"48","severity":1,"message":"49","line":50,"column":25,"nodeType":"50","messageId":"51","endLine":50,"endColumn":27},{"ruleId":"52","severity":1,"message":"53","line":56,"column":6,"nodeType":"54","endLine":56,"endColumn":8,"suggestions":"55"},{"ruleId":"41","severity":1,"message":"56","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"41","severity":1,"message":"57","line":4,"column":10,"nodeType":"43","messageId":"44","endLine":4,"endColumn":17},{"ruleId":"41","severity":1,"message":"58","line":6,"column":10,"nodeType":"43","messageId":"44","endLine":6,"endColumn":23},{"ruleId":"41","severity":1,"message":"59","line":3,"column":17,"nodeType":"43","messageId":"44","endLine":3,"endColumn":21},{"ruleId":"41","severity":1,"message":"60","line":3,"column":23,"nodeType":"43","messageId":"44","endLine":3,"endColumn":29},{"ruleId":"41","severity":1,"message":"61","line":3,"column":31,"nodeType":"43","messageId":"44","endLine":3,"endColumn":34},{"ruleId":"41","severity":1,"message":"62","line":4,"column":17,"nodeType":"43","messageId":"44","endLine":4,"endColumn":26},{"ruleId":"41","severity":1,"message":"47","line":4,"column":38,"nodeType":"43","messageId":"44","endLine":4,"endColumn":44},{"ruleId":"41","severity":1,"message":"42","line":4,"column":46,"nodeType":"43","messageId":"44","endLine":4,"endColumn":55},{"ruleId":"41","severity":1,"message":"63","line":12,"column":35,"nodeType":"43","messageId":"44","endLine":12,"endColumn":40},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'useRef' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array.","ArrayExpression",["64"],"'logo' is defined but never used.","'useForm' is defined but never used.","'BrowserRouter' is defined but never used.","'Form' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'useEffect' is defined but never used.","'watch' is assigned a value but never used.",{"desc":"65","fix":"66"},"Update the dependencies array to be: [formData]",{"range":"67","text":"68"},[1356,1358],"[formData]"]